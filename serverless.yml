
service: s3-Image-uploader

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: eu-north-1
  # DB_HOST: "database-2.cpeuic2qgluo.eu-north-1.rds.amazonaws.com"
  # DB_NAME: <your-db-name>
  # DB_USER: <your-db-username>
  # DB_PASSWORD: <your-db-password>


# custom:
#   fileUploadBucketName: ${self:service}-bucket-${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function

functions:
  s3ImageUploader:
    handler: src/upload.handler
    name: s3-Image-uploader
    description: A lambda handler that uploads a file to an S3 bucket based on an API Gateway trigger.
    timeout: 60 
    memorySize: 128 
    events:
      - http:
          path: images
          method: POST
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "s3:Put*"
        Resource: arn:aws:s3:::tgm-general/*
    environment:
      FILE_UPLOAD_BUCKET_NAME: tgm-general

  s3ImageGet:
    handler: src/get.handler
    name: s3-Image-get
    description: A lambda handler that gets a file on an S3 bucket based on an API Gateway trigger.
    timeout: 60 
    memorySize: 128 
    events:
      - http:
          path: images/{imageKey}
          method: GET
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "s3:Get*"
        Resource: arn:aws:s3:::tgm-general/*
    environment:
      FILE_UPLOAD_BUCKET_NAME: tgm-general

  s3ImageDelete:
    handler: src/delete.handler
    name: s3-Image-delete
    description: A lambda handler that deletes a file on an S3 bucket based on an API Gateway trigger.
    timeout: 60 
    memorySize: 128 
    events:
      - http:
          path: images/{imageKey}
          method: DELETE
    iamRoleStatements:
      - Effect: Allow
        Action:
          - "s3:DeleteObject"
        Resource: arn:aws:s3:::tgm-general/*
    environment:
      FILE_UPLOAD_BUCKET_NAME: tgm-general
  
  channelApi:
    handler: src/API/channelAPI.handler
    name: Channel-api
    description: A lambda handler for channel APIs.
    timeout: 60
    memorySize: 128
    events:
      - http:
          path: channel
          method: GET
      - http:
          path: channel/{id}
          method: GET
      - http:
          path: channel
          method: POST
      - http:
          path: channel/{id}
          method: PUT
      - http:
          path: channel/{id}
          method: PATCH
    iamRoleStatements:
    - Effect: Allow
      Action:
        - "rds-data:ExecuteStatement"
      Resource: "arn:aws:rds-db:eu-north-1:381492175278:dbuser:tgm/admin"

# resources:
#   Resources:
#     FileBucket:
#       Type: AWS::S3::Bucket
#       Properties:
#         BucketName: tgm-general
#         AccessControl: PublicRead

